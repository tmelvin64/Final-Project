/*
This game involves treasure hunting, the user has to find 
three diamonds before they find 3 bombs 
The assignment of the bombs and diamonds is similar to the matching game assignment
 */

/**
 *
 * @author S199749343
 */

    import javax.swing.ImageIcon;
    import java.util.*;
    
public class GameDialog extends javax.swing.JDialog {
    ArrayList<Integer> tiles = new ArrayList(); //Holds the tiles in the list
    ArrayList<Integer> set = new ArrayList(); //And set the pictures in order
    
    ImageIcon a = new ImageIcon("url1.jpg"); //ImageIcon will hold and set the images for the cards
    ImageIcon b = new ImageIcon("bomb.png");
    ImageIcon c = new ImageIcon ("diamond.png"); 
    ImageIcon d = new ImageIcon ("unchecked.png"); 
   
    int bDiscovered;//Number of bombs discovered
    int dDiscovered;//Number of diamonds discovered

    public GameDialog(java.awt.Frame parent, boolean modal){
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        tile14 = new javax.swing.JButton();
        tile15 = new javax.swing.JButton();
        tile16 = new javax.swing.JButton();
        tile9 = new javax.swing.JButton();
        tile10 = new javax.swing.JButton();
        tile11 = new javax.swing.JButton();
        tile12 = new javax.swing.JButton();
        tile5 = new javax.swing.JButton();
        tile6 = new javax.swing.JButton();
        tile7 = new javax.swing.JButton();
        tile8 = new javax.swing.JButton();
        tile1 = new javax.swing.JButton();
        tile2 = new javax.swing.JButton();
        tile3 = new javax.swing.JButton();
        tile4 = new javax.swing.JButton();
        textField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        tile13 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 175, 96));

        title.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 24)); // NOI18N
        title.setText("Treasure Hunter");

        tile14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile14.setAlignmentY(0.0F);
        tile14.setIconTextGap(0);
        tile14.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile14.setMaximumSize(new java.awt.Dimension(129, 129));
        tile14.setMinimumSize(new java.awt.Dimension(129, 129));
        tile14.setOpaque(false);
        tile14.setPreferredSize(new java.awt.Dimension(129, 129));
        tile14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile14ActionPerformed(evt);
            }
        });

        tile15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile15.setAlignmentY(0.0F);
        tile15.setIconTextGap(0);
        tile15.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile15.setMaximumSize(new java.awt.Dimension(129, 129));
        tile15.setMinimumSize(new java.awt.Dimension(129, 129));
        tile15.setOpaque(false);
        tile15.setPreferredSize(new java.awt.Dimension(129, 129));
        tile15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile15ActionPerformed(evt);
            }
        });

        tile16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile16.setAlignmentY(0.0F);
        tile16.setIconTextGap(0);
        tile16.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile16.setMaximumSize(new java.awt.Dimension(129, 129));
        tile16.setMinimumSize(new java.awt.Dimension(129, 129));
        tile16.setOpaque(false);
        tile16.setPreferredSize(new java.awt.Dimension(129, 129));
        tile16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile16ActionPerformed(evt);
            }
        });

        tile9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile9.setAlignmentY(0.0F);
        tile9.setIconTextGap(0);
        tile9.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile9.setMaximumSize(new java.awt.Dimension(129, 129));
        tile9.setMinimumSize(new java.awt.Dimension(129, 129));
        tile9.setOpaque(false);
        tile9.setPreferredSize(new java.awt.Dimension(129, 129));
        tile9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile9ActionPerformed(evt);
            }
        });

        tile10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile10.setAlignmentY(0.0F);
        tile10.setIconTextGap(0);
        tile10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile10.setMaximumSize(new java.awt.Dimension(129, 129));
        tile10.setMinimumSize(new java.awt.Dimension(129, 129));
        tile10.setOpaque(false);
        tile10.setPreferredSize(new java.awt.Dimension(129, 129));
        tile10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile10ActionPerformed(evt);
            }
        });

        tile11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile11.setAlignmentY(0.0F);
        tile11.setIconTextGap(0);
        tile11.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile11.setMaximumSize(new java.awt.Dimension(129, 129));
        tile11.setMinimumSize(new java.awt.Dimension(129, 129));
        tile11.setOpaque(false);
        tile11.setPreferredSize(new java.awt.Dimension(129, 129));
        tile11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile11ActionPerformed(evt);
            }
        });

        tile12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile12.setAlignmentY(0.0F);
        tile12.setIconTextGap(0);
        tile12.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile12.setMaximumSize(new java.awt.Dimension(129, 129));
        tile12.setMinimumSize(new java.awt.Dimension(129, 129));
        tile12.setOpaque(false);
        tile12.setPreferredSize(new java.awt.Dimension(129, 129));
        tile12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile12ActionPerformed(evt);
            }
        });

        tile5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile5.setAlignmentY(0.0F);
        tile5.setIconTextGap(0);
        tile5.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile5.setMaximumSize(new java.awt.Dimension(129, 129));
        tile5.setMinimumSize(new java.awt.Dimension(129, 129));
        tile5.setOpaque(false);
        tile5.setPreferredSize(new java.awt.Dimension(129, 129));
        tile5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile5ActionPerformed(evt);
            }
        });

        tile6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile6.setAlignmentY(0.0F);
        tile6.setIconTextGap(0);
        tile6.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile6.setMaximumSize(new java.awt.Dimension(129, 129));
        tile6.setMinimumSize(new java.awt.Dimension(129, 129));
        tile6.setOpaque(false);
        tile6.setPreferredSize(new java.awt.Dimension(129, 129));
        tile6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile6ActionPerformed(evt);
            }
        });

        tile7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile7.setAlignmentY(0.0F);
        tile7.setIconTextGap(0);
        tile7.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile7.setMaximumSize(new java.awt.Dimension(129, 129));
        tile7.setMinimumSize(new java.awt.Dimension(129, 129));
        tile7.setOpaque(false);
        tile7.setPreferredSize(new java.awt.Dimension(129, 129));
        tile7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile7ActionPerformed(evt);
            }
        });

        tile8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile8.setAlignmentY(0.0F);
        tile8.setIconTextGap(0);
        tile8.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile8.setMaximumSize(new java.awt.Dimension(129, 129));
        tile8.setMinimumSize(new java.awt.Dimension(129, 129));
        tile8.setOpaque(false);
        tile8.setPreferredSize(new java.awt.Dimension(129, 129));
        tile8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile8ActionPerformed(evt);
            }
        });

        tile1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile1.setAlignmentY(0.0F);
        tile1.setIconTextGap(0);
        tile1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile1.setMaximumSize(new java.awt.Dimension(129, 129));
        tile1.setMinimumSize(new java.awt.Dimension(129, 129));
        tile1.setOpaque(false);
        tile1.setPreferredSize(new java.awt.Dimension(129, 129));
        tile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile1ActionPerformed(evt);
            }
        });

        tile2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile2.setAlignmentY(0.0F);
        tile2.setIconTextGap(0);
        tile2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile2.setMaximumSize(new java.awt.Dimension(129, 129));
        tile2.setMinimumSize(new java.awt.Dimension(129, 129));
        tile2.setOpaque(false);
        tile2.setPreferredSize(new java.awt.Dimension(129, 129));
        tile2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile2ActionPerformed(evt);
            }
        });

        tile3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile3.setAlignmentY(0.0F);
        tile3.setIconTextGap(0);
        tile3.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile3.setMaximumSize(new java.awt.Dimension(129, 129));
        tile3.setMinimumSize(new java.awt.Dimension(129, 129));
        tile3.setOpaque(false);
        tile3.setPreferredSize(new java.awt.Dimension(129, 129));
        tile3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile3ActionPerformed(evt);
            }
        });

        tile4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile4.setAlignmentY(0.0F);
        tile4.setIconTextGap(0);
        tile4.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile4.setMaximumSize(new java.awt.Dimension(129, 129));
        tile4.setMinimumSize(new java.awt.Dimension(129, 129));
        tile4.setOpaque(false);
        tile4.setPreferredSize(new java.awt.Dimension(129, 129));
        tile4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile4ActionPerformed(evt);
            }
        });

        textField.setText("To start, press the start button");

        startButton.setText("Start/Restart");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        tile13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/unchecked.png"))); // NOI18N
        tile13.setAlignmentY(0.0F);
        tile13.setIconTextGap(0);
        tile13.setMargin(new java.awt.Insets(0, 0, 0, 0));
        tile13.setMaximumSize(new java.awt.Dimension(129, 129));
        tile13.setMinimumSize(new java.awt.Dimension(129, 129));
        tile13.setOpaque(false);
        tile13.setPreferredSize(new java.awt.Dimension(129, 129));
        tile13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tile13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tile1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tile5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile6, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile7, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tile4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tile8, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tile9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tile13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tile14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tile15, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tile16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tile12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startButton)))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(textField)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(title)
                        .addGap(0, 335, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title)
                    .addComponent(startButton))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(tile14, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tile15, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tile13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tile9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tile10, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tile11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(tile16, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tile12, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tile8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tile4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tile1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
       restart();//Resets the game before playing
       
        for(int x=0; x<=9; x++){//Adds all of the empty squares to the set
                set.add(0);
            }
        
        for(int y=0; y<=2; y++){ //Adds 3 bombs and diamonds to the set
                set.add(1);  
                set.add(2);
            }
        
        for (int i = 0; i<= 15; i++) {//Assigns an array value to the button to change the cards
            double index = Math.floor(Math.random() * (16 - i));
            int index1 = (int) index;
            tiles.add(set.get(index1));
            set.remove(set.get(index1));
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void tile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile1ActionPerformed
    int temp = tiles.get(0); //Checks what image is inside the tile

        if (temp==0){ //This if structure assigns the proper image to the card
            tile1.setIcon(a);
        } else if (temp==1){
            tile1.setIcon(b);
        } else if (temp==2){
            tile1.setIcon(c);
        }  
        tile1.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile1ActionPerformed

    private void tile2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile2ActionPerformed
      int temp = tiles.get(1); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile2.setIcon(a);
        } else if (temp==1) {
            tile2.setIcon(b);
        } else if (temp==2){
            tile2.setIcon(c);
        }   
        tile2.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp); //Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile2ActionPerformed

    private void tile3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile3ActionPerformed
      int temp = tiles.get(2); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile3.setIcon(a);
        } else if (temp==1) {
            tile3.setIcon(b);
        } else if (temp==2){
            tile3.setIcon(c);
        }   
        tile3.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile3ActionPerformed

    private void tile4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile4ActionPerformed
          int temp = tiles.get(3); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile4.setIcon(a);
        } else if (temp==1) {
            tile4.setIcon(b);
        } else if (temp==2){
            tile4.setIcon(c);
        }   
        tile4.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile4ActionPerformed

    private void tile5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile5ActionPerformed
          int temp = tiles.get(4); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile5.setIcon(a);
        } else if (temp==1) {
            tile5.setIcon(b);
        } else if (temp==2){
            tile5.setIcon(c);
        }   
        tile5.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile5ActionPerformed

    private void tile6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile6ActionPerformed
         int temp = tiles.get(5); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile6.setIcon(a);
        } else if (temp==1) {
            tile6.setIcon(b);
        } else if (temp==2){
            tile6.setIcon(c);
        }   
        tile6.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile6ActionPerformed

    private void tile7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile7ActionPerformed
      int temp = tiles.get(6); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile7.setIcon(a);
        } else if (temp==1) {
            tile7.setIcon(b);
        } else if (temp==2){
            tile7.setIcon(c);
        }   
        tile7.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile7ActionPerformed

    private void tile8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile8ActionPerformed
         int temp = tiles.get(7); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile8.setIcon(a);
        } else if (temp==1) {
            tile8.setIcon(b);
        } else if (temp==2){
            tile8.setIcon(c);
        }   
        tile8.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile8ActionPerformed

    private void tile9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile9ActionPerformed
          int temp = tiles.get(8); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile9.setIcon(a);
        } else if (temp==1) {
            tile9.setIcon(b);
        } else if (temp==2){
            tile9.setIcon(c);
        }   
        tile9.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile9ActionPerformed

    private void tile10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile10ActionPerformed
          int temp = tiles.get(9); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile10.setIcon(a);
        } else if (temp==1) {
            tile10.setIcon(b);
        } else if (temp==2){
            tile10.setIcon(c);
        }   
        tile10.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile10ActionPerformed

    private void tile11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile11ActionPerformed
          int temp = tiles.get(10); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile11.setIcon(a);
        } else if (temp==1) {
            tile11.setIcon(b);
        } else if (temp==2){
            tile11.setIcon(c);
        }   
        tile11.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile11ActionPerformed

    private void tile12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile12ActionPerformed
          int temp = tiles.get(11); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile12.setIcon(a);
        } else if (temp==1) {
            tile12.setIcon(b);
        } else if (temp==2){
            tile12.setIcon(c);
        }   
        tile12.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile12ActionPerformed

    private void tile13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile13ActionPerformed
          int temp = tiles.get(12); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile13.setIcon(a);
        } else if (temp==1) {
            tile13.setIcon(b);
        } else if (temp==2){
            tile13.setIcon(c);
        }   
        tile13.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile13ActionPerformed

    private void tile14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile14ActionPerformed
          int temp = tiles.get(13); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile14.setIcon(a);
        } else if (temp==1) {
            tile14.setIcon(b);
        } else if (temp==2){
            tile14.setIcon(c);
        }   
        tile14.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile14ActionPerformed

    private void tile15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile15ActionPerformed
          int temp = tiles.get(14); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile15.setIcon(a);
        } else if (temp==1) {
            tile15.setIcon(b);
        } else if (temp==2){
            tile15.setIcon(c);
        }   
        tile15.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time   
    }//GEN-LAST:event_tile15ActionPerformed

    private void tile16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tile16ActionPerformed
          int temp = tiles.get(15); //Checks what image is inside the box

        if (temp==0){ //This if structure assigns the proper image to the card
            tile16.setIcon(a);
        } else if (temp==1) {
            tile16.setIcon(b);
        } else if (temp==2){
            tile16.setIcon(c);
        }   
        tile16.setEnabled(false);//Disables the button so the player cannot continue playing
        winConditions(temp);//Checks to see if they have found a bomb or a diamond
        temp=0;//Resets the card choice for next time
    }//GEN-LAST:event_tile16ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GameDialog dialog = new GameDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton startButton;
    private javax.swing.JTextField textField;
    private javax.swing.JButton tile1;
    private javax.swing.JButton tile10;
    private javax.swing.JButton tile11;
    private javax.swing.JButton tile12;
    private javax.swing.JButton tile13;
    private javax.swing.JButton tile14;
    private javax.swing.JButton tile15;
    private javax.swing.JButton tile16;
    private javax.swing.JButton tile2;
    private javax.swing.JButton tile3;
    private javax.swing.JButton tile4;
    private javax.swing.JButton tile5;
    private javax.swing.JButton tile6;
    private javax.swing.JButton tile7;
    private javax.swing.JButton tile8;
    private javax.swing.JButton tile9;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
  public void winConditions(int temp){
    if(temp==1){ //If the player has discovered a bomb
        bDiscovered++; //Add a bomb to the counter    
    }else if(temp==2){ //If the player has discovered a diamond 
       dDiscovered++;  //Add a diamond to the counter
    }     
    textField.setText("The number of bombs is: "+bDiscovered+". The number of diamonds discovered is: "+dDiscovered+".");  
    winCheck();
  }
  
  public void winCheck(){
    if(bDiscovered==3){
        textField.setText("You have found 3 bombs, you lose");
        tile1.setEnabled(false); //Disabling the buttons so players cannot continue
        tile2.setEnabled(false);
        tile3.setEnabled(false);
        tile4.setEnabled(false);
        tile5.setEnabled(false);
        tile6.setEnabled(false);
        tile7.setEnabled(false);
        tile8.setEnabled(false);
        tile9.setEnabled(false);
        tile10.setEnabled(false);
        tile11.setEnabled(false);
        tile12.setEnabled(false);
        tile13.setEnabled(false);
        tile14.setEnabled(false);
        tile15.setEnabled(false);
        tile16.setEnabled(false);
    
    }else if(dDiscovered==3){        
        textField.setText("You have found 3 diamonds, you win!");
        tile1.setEnabled(false); //Disabling the buttons so players cannot continue 
        tile2.setEnabled(false);
        tile3.setEnabled(false);
        tile4.setEnabled(false);
        tile5.setEnabled(false);
        tile6.setEnabled(false);
        tile7.setEnabled(false);
        tile8.setEnabled(false);
        tile9.setEnabled(false);
        tile10.setEnabled(false);
        tile11.setEnabled(false);
        tile12.setEnabled(false);
        tile13.setEnabled(false);
        tile14.setEnabled(false);
        tile15.setEnabled(false);
        tile16.setEnabled(false);
    }  
  }
 
  public void restart(){ //This will reyurn the game to its replayable state
    bDiscovered=0;//Resetting the bomb and diamondcounters
    dDiscovered=0;  
      
    tile1.setEnabled(true); //Enabling the buttons again
    tile2.setEnabled(true);
    tile3.setEnabled(true);
    tile4.setEnabled(true);
    tile5.setEnabled(true);
    tile6.setEnabled(true);
    tile7.setEnabled(true);
    tile8.setEnabled(true);
    tile9.setEnabled(true);
    tile10.setEnabled(true);
    tile11.setEnabled(true);
    tile12.setEnabled(true);
    tile13.setEnabled(true);
    tile14.setEnabled(true);
    tile15.setEnabled(true);
    tile16.setEnabled(true);
      
    tile1.setIcon(d);//Resetting the icons
    tile2.setIcon(d);
    tile3.setIcon(d);
    tile4.setIcon(d);
    tile5.setIcon(d);
    tile6.setIcon(d);
    tile7.setIcon(d);
    tile8.setIcon(d);
    tile9.setIcon(d);
    tile10.setIcon(d);
    tile11.setIcon(d);
    tile12.setIcon(d);
    tile13.setIcon(d);
    tile14.setIcon(d);
    tile15.setIcon(d);
    tile16.setIcon(d);    
    
    tiles.clear();//Resets the tiles array
}
}
